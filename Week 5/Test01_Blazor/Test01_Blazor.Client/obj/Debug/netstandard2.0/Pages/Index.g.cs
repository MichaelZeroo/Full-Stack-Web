#pragma checksum "E:\XTemp_181Q182Q\Dev\Test01_Blazor\Test01_Blazor.Client\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "34626a10d89ba6b96c0909a4027a70b9efef76c5"
// <auto-generated/>
#pragma warning disable 1591
namespace Test01_Blazor.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Test01_Blazor.Client;
    using Test01_Blazor.Client.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "pre");
            builder.AddAttribute(1, "style", "font-size: 14pt");
            builder.AddContent(2, "\n\nUK Health Emergency - person check\n\nGender? (m/f)          : ");
            builder.OpenElement(3, "input");
            builder.AddAttribute(4, "type", "text");
            builder.AddAttribute(5, "autofocus", true);
            builder.AddAttribute(6, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(gender));
            builder.AddAttribute(7, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => gender = __value, gender));
            builder.CloseElement();
            builder.AddContent(8, "\n\nAge of person (Years)  : ");
            builder.OpenElement(9, "input");
            builder.AddAttribute(10, "type", "number");
            builder.AddAttribute(11, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(age));
            builder.AddAttribute(12, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => age = __value, age));
            builder.CloseElement();
            builder.AddContent(13, "\n\nYears on waiting list? : ");
            builder.OpenElement(14, "input");
            builder.AddAttribute(15, "type", "number");
            builder.AddAttribute(16, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(wait));
            builder.AddAttribute(17, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => wait = __value, wait));
            builder.CloseElement();
            builder.AddContent(18, "\n\n                         ");
            builder.OpenElement(19, "button");
            builder.AddAttribute(20, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(Process));
            builder.AddContent(21, "Submit");
            builder.CloseElement();
            builder.AddContent(22, "\n\n                         ");
            builder.OpenElement(23, "textarea");
            builder.AddAttribute(24, "rows", "6");
            builder.AddAttribute(25, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(result));
            builder.AddAttribute(26, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => result = __value, result));
            builder.CloseElement();
            builder.AddContent(27, "             \n\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 19 "E:\XTemp_181Q182Q\Dev\Test01_Blazor\Test01_Blazor.Client\Pages\Index.cshtml"
            
    string gender = "";
    string result = "";
    string age = "";
    string wait = "";

    void Process() {
        if (gender.ToLower() == "f") {
            result = "Female person confirmed. Now moving to the next step.";
        } else {
            result = "Not a female person. Run again to check the next person.";
            //reset values
            gender = "";
            age = "";
            wait = "";
            return;
        }

        //User input is string data. Convert age and wait to type int (integer)
        int ageInt = int.Parse(age);
        int waitInt = int.Parse(wait);

        if (ageInt >= 68 + waitInt && ageInt <= 71 + waitInt) {
            result = "This person is in the high risk category. ";
            result += "You need to make an urgent doctor's appointment for her.";
        } else {
            result = "This person is not in the high risk category. ";
            result += "Run this program again to check the next person.";
        }

        return;
    }


#line default
#line hidden
    }
}
#pragma warning restore 1591
